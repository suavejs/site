{
  "title": "The use directive",
  "files": [
    {
      "name": "App.svelte",
      "source": "<script>\n\timport { spring } from 'svelte/motion';\n\timport { pannable } from './pannable.js';\n\n\tconst coords = spring({ x: 0, y: 0 }, {\n\t\tstiffness: 0.2,\n\t\tdamping: 0.4\n\t});\n\n\tfunction handlePanStart() {\n\t\tcoords.stiffness = coords.damping = 1;\n\t}\n\n\tfunction handlePanMove(event) {\n\t\tcoords.update($coords => ({\n\t\t\tx: $coords.x + event.detail.dx,\n\t\t\ty: $coords.y + event.detail.dy\n\t\t}));\n\t}\n\n\tfunction handlePanEnd(event) {\n\t\tcoords.stiffness = 0.2;\n\t\tcoords.damping = 0.4;\n\t\tcoords.set({ x: 0, y: 0 });\n\t}\n</script>\n\n<style>\n\t.box {\n\t\t--width: 100px;\n\t\t--height: 100px;\n\t\tposition: absolute;\n\t\twidth: var(--width);\n\t\theight: var(--height);\n\t\tleft: calc(50% - var(--width) / 2);\n\t\ttop: calc(50% - var(--height) / 2);\n\t\tborder-radius: 4px;\n\t\tbackground-color: #ff3e00;\n\t\tcursor: move;\n\t}\n</style>\n\n<div class=\"box\"\n\tuse:pannable\n\ton:panstart={handlePanStart}\n\ton:panmove={handlePanMove}\n\ton:panend={handlePanEnd}\n\tstyle=\"transform:\n\t\ttranslate({$coords.x}px,{$coords.y}px)\n\t\trotate({$coords.x * 0.2}deg)\"\n></div>"
    },
    {
      "name": "pannable.js",
      "source": "export function pannable(node) {\n\tlet x;\n\tlet y;\n\n\tfunction handleMousedown(event) {\n\t\tx = event.clientX;\n\t\ty = event.clientY;\n\n\t\tnode.dispatchEvent(new CustomEvent('panstart', {\n\t\t\tdetail: { x, y }\n\t\t}));\n\n\t\twindow.addEventListener('mousemove', handleMousemove);\n\t\twindow.addEventListener('mouseup', handleMouseup);\n\t}\n\n\tfunction handleMousemove(event) {\n\t\tconst dx = event.clientX - x;\n\t\tconst dy = event.clientY - y;\n\t\tx = event.clientX;\n\t\ty = event.clientY;\n\n\t\tnode.dispatchEvent(new CustomEvent('panmove', {\n\t\t\tdetail: { x, y, dx, dy }\n\t\t}));\n\t}\n\n\tfunction handleMouseup(event) {\n\t\tx = event.clientX;\n\t\ty = event.clientY;\n\n\t\tnode.dispatchEvent(new CustomEvent('panend', {\n\t\t\tdetail: { x, y }\n\t\t}));\n\n\t\twindow.removeEventListener('mousemove', handleMousemove);\n\t\twindow.removeEventListener('mouseup', handleMouseup);\n\t}\n\n\tnode.addEventListener('mousedown', handleMousedown);\n\n\treturn {\n\t\tdestroy() {\n\t\t\tnode.removeEventListener('mousedown', handleMousedown);\n\t\t}\n\t};\n}"
    }
  ]
}
