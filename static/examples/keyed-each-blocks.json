{"title":"Keyed each blocks","files":[{"name":"App.svelte","source":"<script>\n\timport Thing from './Thing.svelte';\n\n\tlet things = [\n\t\t{ id: 1, value: 'a' },\n\t\t{ id: 2, value: 'b' },\n\t\t{ id: 3, value: 'c' },\n\t\t{ id: 4, value: 'd' },\n\t\t{ id: 5, value: 'e' }\n\t];\n\n\tfunction handleClick() {\n\t\tthings = things.slice(1);\n\t}\n</script>\n\n<button on:click={handleClick}>\n\tRemove first thing\n</button>\n\n<div style=\"display: grid; grid-template-columns: 1fr 1fr; grip-gap: 1em\">\n\t<div>\n\t\t<h2>Keyed</h2>\n\t\t{#each things as thing (thing.id)}\n\t\t\t<Thing value={thing.value}/>\n\t\t{/each}\n\t</div>\n\n\t<div>\n\t\t<h2>Unkeyed</h2>\n\t\t{#each things as thing}\n\t\t\t<Thing value={thing.value}/>\n\t\t{/each}\n\t</div>\n</div>"},{"name":"Thing.svelte","source":"<script>\n\t// `value` is updated whenever the prop value changes...\n\texport let value;\n\n\t// ...but `valueAtStart` is fixed upon initialisation\n\tconst valueAtStart = value;\n</script>\n\n<p>{valueAtStart} / {value}</p>"}]}