{"title":"Immutable data","files":[{"name":"App.svelte","source":"<svelte:options immutable/>\n\n<script>\n\timport ImmutableTodo from './ImmutableTodo.svelte';\n\timport MutableTodo from './MutableTodo.svelte';\n\n\tlet todos = [\n\t\t{ id: 1, done: true, text: 'wash the car' },\n\t\t{ id: 2, done: false, text: 'take the dog for a walk' },\n\t\t{ id: 3, done: false, text: 'mow the lawn' }\n\t];\n\n\tfunction toggle(id) {\n\t\ttodos = todos.map(todo => {\n\t\t\tif (todo.id === id) {\n\t\t\t\t// return a new object\n\t\t\t\treturn {\n\t\t\t\t\tid,\n\t\t\t\t\tdone: !todo.done,\n\t\t\t\t\ttext: todo.text\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// return the same object\n\t\t\treturn todo;\n\t\t});\n\t}\n</script>\n\n<h2>Immutable</h2>\n{#each todos as todo}\n\t<ImmutableTodo {todo} on:click=\"{() => toggle(todo.id)}\"/>\n{/each}\n\n<h2>Mutable</h2>\n{#each todos as todo}\n\t<MutableTodo {todo} on:click=\"{() => toggle(todo.id)}\"/>\n{/each}\n"},{"name":"ImmutableTodo.svelte","source":"<svelte:options immutable/>\n\n<script>\n\timport { afterUpdate } from 'svelte';\n\timport flash from './flash.js';\n\n\texport let todo;\n\texport let toggle;\n\n\tlet div;\n\n\tafterUpdate(() => {\n\t\tflash(div);\n\t});\n</script>\n\n<style>\n\tdiv {\n\t\tcursor: pointer;\n\t\tline-height: 1.5;\n\t}\n</style>\n\n<!-- the text will flash red whenever\n\t\tthe `todo` object changes -->\n<div bind:this={div} on:click>\n\t{todo.done ? 'üëç': ''} {todo.text}\n</div>\n"},{"name":"MutableTodo.svelte","source":"<script>\n\timport { afterUpdate } from 'svelte';\n\timport flash from './flash.js';\n\n\texport let todo;\n\texport let toggle;\n\n\tlet div;\n\n\tafterUpdate(() => {\n\t\tflash(div);\n\t});\n</script>\n\n<style>\n\tdiv {\n\t\tcursor: pointer;\n\t\tline-height: 1.5;\n\t}\n</style>\n\n<!-- the text will flash red whenever\n\t\tthe `todo` object changes -->\n<div bind:this={div} on:click>\n\t{todo.done ? 'üëç': ''} {todo.text}\n</div>\n"},{"name":"flash.js","source":"export default function flash(element) {\n\trequestAnimationFrame(() => {\n\t\telement.style.transition = 'none';\n\t\telement.style.color = 'rgba(255,62,0,1)';\n\t\telement.style.backgroundColor = 'rgba(255,62,0,0.2)';\n\n\t\tsetTimeout(() => {\n\t\t\telement.style.transition = 'color 1s, background 1s';\n\t\t\telement.style.color = '';\n\t\t\telement.style.backgroundColor = '';\n\t\t});\n\t});\n}"}]}